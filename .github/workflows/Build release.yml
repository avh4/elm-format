name: Build release

on:
  push:
    tags: '*'
    branches: 'release/*'

jobs:
  build:
    strategy:
      matrix:
        os:
        - windows-latest
        - macOS-latest

    name: release-${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
    - name: Configure environment
      run: |
        git config --global core.autocrlf false
    - uses: actions/checkout@v2
    - uses: actions/setup-haskell@v1.1
      name: Setup Haskell Stack
      with:
        ghc-version: 8.8.4
        enable-stack: true
        stack-version: latest
    - uses: actions/cache@v2
      name: Cache stack-root
      if: runner.os != 'Windows'
      with:
        # NOTE: the "/*" below is required otherwise the exclude line doesn't work.  See https://github.com/actions/cache/issues/364#issuecomment-678118231
        path: |
          ~/.stack/*
          !~/.stack/setup-exe-cache
        key: ${{ runner.os }}-stack-root-v4
    - uses: actions/cache@v2
      name: Cache stack-root (for Windows)
      if: runner.os == 'Windows'
      with:
        path: C:\sr
        key: ${{ runner.os }}-stack-root-v1
    - name: Configure Haskell Stack
      run: |
        stack config set system-ghc --global true
    - run: stack update
    - run: stack path
    - name: stack build --only-snapshot
      uses: nick-invision/retry@v1
      with:
        timeout_minutes: 60
        max_attempts: 3
        command: stack build --only-snapshot
    - run: stack build --only-dependencies
    - name: stack install shake
      uses: nick-invision/retry@v1
      with:
        timeout_minutes: 60
        max_attempts: 3
        command: stack install shake
    - name: Build dist
      run: stack runhaskell Shakefile.hs -- dist
    - name: Copy binary
      shell: bash
      run: |
        mkdir -p dist
        stack install --local-bin-path=dist
    - name: Compress binary
      if: runner.os != 'Windows'
      shell: bash
      run: |
        strip dist/elm-format
        tar zcvf elm-format.tgz -C dist elm-format
        shasum dist/elm-format
        shasum elm-format.tgz
    - name: Compress binary (for Windows)
      if: runner.os == 'Windows'
      shell: bash
      run: |
        strip dist/elm-format.exe
        7z a -bb3 -tzip -mfb=258 -mpass=15 elm-format.zip "$(pwd)"/dist/elm-format.exe
    - name: Binary hashes (for Windows)
      if: runner.os == 'Windows'
      shell: powershell
      run: |
        Get-FileHash -Algorithm SHA1 dist/elm-format.exe
        Get-FileHash -Algorithm SHA1 elm-format.zip
    - uses: actions/upload-artifact@v2
      if: runner.os != 'Windows'
      with:
        name: elm-format-${{ github.sha }}-${{ runner.os }}.tgz
        path: elm-format.tgz
    - uses: actions/upload-artifact@v2
      if: runner.os == 'Windows'
      with:
        name: elm-format-${{ github.sha }}-${{ runner.os }}.zip
        path: elm-format.zip
