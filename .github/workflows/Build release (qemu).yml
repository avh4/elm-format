name: Build release (qemu)

on:
  push:
    tags: '*'
    branches: 'release/*'

defaults:
  run:
    shell: bash

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        build:
        - arch: aarch64
          distro: alpine_latest
          archive-label: linux-aarch64
          ghc:
            version: "9.2.5"

    name: ${{ matrix.build.archive-label }}
    runs-on: ubuntu-latest

    steps:
    - name: Configure environment
      run: |
        git config --global core.autocrlf false
    - uses: actions/checkout@v3
    - uses: ./.github/actions/git-tags
    - name: Build on ${{ matrix.build.arch }} ${{ matrix.build.distro }}
      uses: uraimo/run-on-arch-action@v2
      with:
        arch: ${{ matrix.build.arch }}
        distro: ${{ matrix.build.distro }}
        # githubToken
        setup: |
          mkdir -pv "${PWD}/dist"
        dockerRunArgs: |
          --volume "${PWD}/dist:/dist"
        install: |
          case "${{ matrix.build.distro }}" in
            alpine*)
              apk update
              apk add curl
              ;;
          esac
        run: |
          set -x

          # Check platform
          uname -a
          pwd
          ls
          echo "$HOME"
          curl --version

          # Install Haskell
          curl -o ghcup https://downloads.haskell.org/~ghcup/0.1.19.0/aarch64-linux-ghcup-0.1.19.0
          chmod 0555 ./ghcup
          file ./ghcup

          export GHCUP_USE_XDG_DIRS=1
          ./ghcup list
          export GHCUP_SKIP_UPDATE_CHECK=1
          ./ghcup unset ghc || true
          ./ghcup install ghc "${{ matrix.build.ghc.version }}"
          ./ghcup set ghc "${{ matrix.build.ghc.version }}"
          ./ghcup install cabal recommended
          ./ghcup set cabal recommended
          find ~/.local/bin || true
          export PATH="$HOME/.local/bin:$PATH"

          # Verify Haskell version
          file "$(which cabal)"
          cabal --version
          ghc --version
          ghc --numeric-version
          ghc --print-build-platform

          # Build
          cabal v2-update
          ./dev/build.sh -- dist-dependencies
          ./dev/build.sh -- dist
    - uses: ./.github/actions/release-artifact
